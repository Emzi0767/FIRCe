### YamlMime:ManagedReference
items:
- uid: smIRCL.ServerEntities.IrcChannel
  commentId: T:smIRCL.ServerEntities.IrcChannel
  id: IrcChannel
  parent: smIRCL.ServerEntities
  children:
  - smIRCL.ServerEntities.IrcChannel.#ctor(System.String,System.Collections.Generic.List{System.Char})
  - smIRCL.ServerEntities.IrcChannel.ClientModes
  - smIRCL.ServerEntities.IrcChannel.IsValidName(System.String,System.Collections.Generic.List{System.Char})
  - smIRCL.ServerEntities.IrcChannel.Modes
  - smIRCL.ServerEntities.IrcChannel.Name
  - smIRCL.ServerEntities.IrcChannel.Topic
  - smIRCL.ServerEntities.IrcChannel.UserCollectionComplete
  - smIRCL.ServerEntities.IrcChannel.Users
  langs:
  - csharp
  - vb
  name: IrcChannel
  nameWithType: IrcChannel
  fullName: smIRCL.ServerEntities.IrcChannel
  type: Class
  source:
    remote:
      path: smIRCL/ServerEntities/IrcChannel.cs
      branch: master
      repo: https://github.com/alexhorner/smIRCL.git
    id: IrcChannel
    path: ../smIRCL/ServerEntities/IrcChannel.cs
    startLine: 8
  assemblies:
  - smIRCL
  namespace: smIRCL.ServerEntities
  summary: "\nAn IRC channel which exists on the connected IRC server\n"
  example: []
  syntax:
    content: public class IrcChannel
    content.vb: Public Class IrcChannel
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: smIRCL.ServerEntities.IrcChannel.#ctor(System.String,System.Collections.Generic.List{System.Char})
  commentId: M:smIRCL.ServerEntities.IrcChannel.#ctor(System.String,System.Collections.Generic.List{System.Char})
  id: '#ctor(System.String,System.Collections.Generic.List{System.Char})'
  parent: smIRCL.ServerEntities.IrcChannel
  langs:
  - csharp
  - vb
  name: IrcChannel(String, List<Char>)
  nameWithType: IrcChannel.IrcChannel(String, List<Char>)
  fullName: smIRCL.ServerEntities.IrcChannel.IrcChannel(System.String, System.Collections.Generic.List<System.Char>)
  type: Constructor
  source:
    remote:
      path: smIRCL/ServerEntities/IrcChannel.cs
      branch: master
      repo: https://github.com/alexhorner/smIRCL.git
    id: .ctor
    path: ../smIRCL/ServerEntities/IrcChannel.cs
    startLine: 15
  assemblies:
  - smIRCL
  namespace: smIRCL.ServerEntities
  summary: "\nInstantiates a new channel\n"
  example: []
  syntax:
    content: public IrcChannel(string name, List<char> checkerChars = null)
    parameters:
    - id: name
      type: System.String
      description: The name of the channel
    - id: checkerChars
      type: System.Collections.Generic.List{System.Char}
      description: Optional list of valid chars for server-specific checking from ISupport
    content.vb: Public Sub New(name As String, checkerChars As List(Of Char) = Nothing)
  overload: smIRCL.ServerEntities.IrcChannel.#ctor*
  nameWithType.vb: IrcChannel.IrcChannel(String, List(Of Char))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: smIRCL.ServerEntities.IrcChannel.IrcChannel(System.String, System.Collections.Generic.List(Of System.Char))
  name.vb: IrcChannel(String, List(Of Char))
- uid: smIRCL.ServerEntities.IrcChannel.Name
  commentId: P:smIRCL.ServerEntities.IrcChannel.Name
  id: Name
  parent: smIRCL.ServerEntities.IrcChannel
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: IrcChannel.Name
  fullName: smIRCL.ServerEntities.IrcChannel.Name
  type: Property
  source:
    remote:
      path: smIRCL/ServerEntities/IrcChannel.cs
      branch: master
      repo: https://github.com/alexhorner/smIRCL.git
    id: Name
    path: ../smIRCL/ServerEntities/IrcChannel.cs
    startLine: 24
  assemblies:
  - smIRCL
  namespace: smIRCL.ServerEntities
  summary: "\nThe name of the channel\n"
  example: []
  syntax:
    content: public string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Name As String
  overload: smIRCL.ServerEntities.IrcChannel.Name*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: smIRCL.ServerEntities.IrcChannel.Topic
  commentId: P:smIRCL.ServerEntities.IrcChannel.Topic
  id: Topic
  parent: smIRCL.ServerEntities.IrcChannel
  langs:
  - csharp
  - vb
  name: Topic
  nameWithType: IrcChannel.Topic
  fullName: smIRCL.ServerEntities.IrcChannel.Topic
  type: Property
  source:
    remote:
      path: smIRCL/ServerEntities/IrcChannel.cs
      branch: master
      repo: https://github.com/alexhorner/smIRCL.git
    id: Topic
    path: ../smIRCL/ServerEntities/IrcChannel.cs
    startLine: 28
  assemblies:
  - smIRCL
  namespace: smIRCL.ServerEntities
  summary: "\nThe topic of the channel\n"
  example: []
  syntax:
    content: public string Topic { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Topic As String
  overload: smIRCL.ServerEntities.IrcChannel.Topic*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: smIRCL.ServerEntities.IrcChannel.Modes
  commentId: P:smIRCL.ServerEntities.IrcChannel.Modes
  id: Modes
  parent: smIRCL.ServerEntities.IrcChannel
  langs:
  - csharp
  - vb
  name: Modes
  nameWithType: IrcChannel.Modes
  fullName: smIRCL.ServerEntities.IrcChannel.Modes
  type: Property
  source:
    remote:
      path: smIRCL/ServerEntities/IrcChannel.cs
      branch: master
      repo: https://github.com/alexhorner/smIRCL.git
    id: Modes
    path: ../smIRCL/ServerEntities/IrcChannel.cs
    startLine: 32
  assemblies:
  - smIRCL
  namespace: smIRCL.ServerEntities
  summary: "\nThe modes and their parameters set on the channel\n"
  example: []
  syntax:
    content: public List<KeyValuePair<char, string>> Modes { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.Char,System.String}}
    content.vb: Public ReadOnly Property Modes As List(Of KeyValuePair(Of Char, String))
  overload: smIRCL.ServerEntities.IrcChannel.Modes*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: smIRCL.ServerEntities.IrcChannel.ClientModes
  commentId: P:smIRCL.ServerEntities.IrcChannel.ClientModes
  id: ClientModes
  parent: smIRCL.ServerEntities.IrcChannel
  langs:
  - csharp
  - vb
  name: ClientModes
  nameWithType: IrcChannel.ClientModes
  fullName: smIRCL.ServerEntities.IrcChannel.ClientModes
  type: Property
  source:
    remote:
      path: smIRCL/ServerEntities/IrcChannel.cs
      branch: master
      repo: https://github.com/alexhorner/smIRCL.git
    id: ClientModes
    path: ../smIRCL/ServerEntities/IrcChannel.cs
    startLine: 36
  assemblies:
  - smIRCL
  namespace: smIRCL.ServerEntities
  summary: "\nThe modes set on the client in this channel\n"
  example: []
  syntax:
    content: public List<char> ClientModes { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{System.Char}
    content.vb: Public ReadOnly Property ClientModes As List(Of Char)
  overload: smIRCL.ServerEntities.IrcChannel.ClientModes*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: smIRCL.ServerEntities.IrcChannel.Users
  commentId: P:smIRCL.ServerEntities.IrcChannel.Users
  id: Users
  parent: smIRCL.ServerEntities.IrcChannel
  langs:
  - csharp
  - vb
  name: Users
  nameWithType: IrcChannel.Users
  fullName: smIRCL.ServerEntities.IrcChannel.Users
  type: Property
  source:
    remote:
      path: smIRCL/ServerEntities/IrcChannel.cs
      branch: master
      repo: https://github.com/alexhorner/smIRCL.git
    id: Users
    path: ../smIRCL/ServerEntities/IrcChannel.cs
    startLine: 40
  assemblies:
  - smIRCL
  namespace: smIRCL.ServerEntities
  summary: "\nThe users in the channel\n"
  example: []
  syntax:
    content: public List<string> Users { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Public ReadOnly Property Users As List(Of String)
  overload: smIRCL.ServerEntities.IrcChannel.Users*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: smIRCL.ServerEntities.IrcChannel.UserCollectionComplete
  commentId: P:smIRCL.ServerEntities.IrcChannel.UserCollectionComplete
  id: UserCollectionComplete
  parent: smIRCL.ServerEntities.IrcChannel
  langs:
  - csharp
  - vb
  name: UserCollectionComplete
  nameWithType: IrcChannel.UserCollectionComplete
  fullName: smIRCL.ServerEntities.IrcChannel.UserCollectionComplete
  type: Property
  source:
    remote:
      path: smIRCL/ServerEntities/IrcChannel.cs
      branch: master
      repo: https://github.com/alexhorner/smIRCL.git
    id: UserCollectionComplete
    path: ../smIRCL/ServerEntities/IrcChannel.cs
    startLine: 44
  assemblies:
  - smIRCL
  namespace: smIRCL.ServerEntities
  summary: "\nWhether the Users collection has been fully populated yet\n"
  example: []
  syntax:
    content: public bool UserCollectionComplete { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property UserCollectionComplete As Boolean
  overload: smIRCL.ServerEntities.IrcChannel.UserCollectionComplete*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: smIRCL.ServerEntities.IrcChannel.IsValidName(System.String,System.Collections.Generic.List{System.Char})
  commentId: M:smIRCL.ServerEntities.IrcChannel.IsValidName(System.String,System.Collections.Generic.List{System.Char})
  id: IsValidName(System.String,System.Collections.Generic.List{System.Char})
  parent: smIRCL.ServerEntities.IrcChannel
  langs:
  - csharp
  - vb
  name: IsValidName(String, List<Char>)
  nameWithType: IrcChannel.IsValidName(String, List<Char>)
  fullName: smIRCL.ServerEntities.IrcChannel.IsValidName(System.String, System.Collections.Generic.List<System.Char>)
  type: Method
  source:
    remote:
      path: smIRCL/ServerEntities/IrcChannel.cs
      branch: master
      repo: https://github.com/alexhorner/smIRCL.git
    id: IsValidName
    path: ../smIRCL/ServerEntities/IrcChannel.cs
    startLine: 52
  assemblies:
  - smIRCL
  namespace: smIRCL.ServerEntities
  summary: "\nChecks if a given string forms a valid channel name\n"
  example: []
  syntax:
    content: public static bool IsValidName(string channelName, List<char> checkerChars = null)
    parameters:
    - id: channelName
      type: System.String
      description: String to validate
    - id: checkerChars
      type: System.Collections.Generic.List{System.Char}
      description: Optional list of valid chars for server-specific checking from ISupport
    return:
      type: System.Boolean
      description: Whether the string is a valid channel name
    content.vb: Public Shared Function IsValidName(channelName As String, checkerChars As List(Of Char) = Nothing) As Boolean
  overload: smIRCL.ServerEntities.IrcChannel.IsValidName*
  nameWithType.vb: IrcChannel.IsValidName(String, List(Of Char))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: smIRCL.ServerEntities.IrcChannel.IsValidName(System.String, System.Collections.Generic.List(Of System.Char))
  name.vb: IsValidName(String, List(Of Char))
references:
- uid: smIRCL.ServerEntities
  commentId: N:smIRCL.ServerEntities
  name: smIRCL.ServerEntities
  nameWithType: smIRCL.ServerEntities
  fullName: smIRCL.ServerEntities
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: smIRCL.ServerEntities.IrcChannel.#ctor*
  commentId: Overload:smIRCL.ServerEntities.IrcChannel.#ctor
  name: IrcChannel
  nameWithType: IrcChannel.IrcChannel
  fullName: smIRCL.ServerEntities.IrcChannel.IrcChannel
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.List{System.Char}
  commentId: T:System.Collections.Generic.List{System.Char}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Char>
  nameWithType: List<Char>
  fullName: System.Collections.Generic.List<System.Char>
  nameWithType.vb: List(Of Char)
  fullName.vb: System.Collections.Generic.List(Of System.Char)
  name.vb: List(Of Char)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: smIRCL.ServerEntities.IrcChannel.Name*
  commentId: Overload:smIRCL.ServerEntities.IrcChannel.Name
  name: Name
  nameWithType: IrcChannel.Name
  fullName: smIRCL.ServerEntities.IrcChannel.Name
- uid: smIRCL.ServerEntities.IrcChannel.Topic*
  commentId: Overload:smIRCL.ServerEntities.IrcChannel.Topic
  name: Topic
  nameWithType: IrcChannel.Topic
  fullName: smIRCL.ServerEntities.IrcChannel.Topic
- uid: smIRCL.ServerEntities.IrcChannel.Modes*
  commentId: Overload:smIRCL.ServerEntities.IrcChannel.Modes
  name: Modes
  nameWithType: IrcChannel.Modes
  fullName: smIRCL.ServerEntities.IrcChannel.Modes
- uid: System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.Char,System.String}}
  commentId: T:System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.Char,System.String}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<KeyValuePair<Char, String>>
  nameWithType: List<KeyValuePair<Char, String>>
  fullName: System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<System.Char, System.String>>
  nameWithType.vb: List(Of KeyValuePair(Of Char, String))
  fullName.vb: System.Collections.Generic.List(Of System.Collections.Generic.KeyValuePair(Of System.Char, System.String))
  name.vb: List(Of KeyValuePair(Of Char, String))
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: smIRCL.ServerEntities.IrcChannel.ClientModes*
  commentId: Overload:smIRCL.ServerEntities.IrcChannel.ClientModes
  name: ClientModes
  nameWithType: IrcChannel.ClientModes
  fullName: smIRCL.ServerEntities.IrcChannel.ClientModes
- uid: smIRCL.ServerEntities.IrcChannel.Users*
  commentId: Overload:smIRCL.ServerEntities.IrcChannel.Users
  name: Users
  nameWithType: IrcChannel.Users
  fullName: smIRCL.ServerEntities.IrcChannel.Users
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<String>
  nameWithType: List<String>
  fullName: System.Collections.Generic.List<System.String>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of System.String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: smIRCL.ServerEntities.IrcChannel.UserCollectionComplete*
  commentId: Overload:smIRCL.ServerEntities.IrcChannel.UserCollectionComplete
  name: UserCollectionComplete
  nameWithType: IrcChannel.UserCollectionComplete
  fullName: smIRCL.ServerEntities.IrcChannel.UserCollectionComplete
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: smIRCL.ServerEntities.IrcChannel.IsValidName*
  commentId: Overload:smIRCL.ServerEntities.IrcChannel.IsValidName
  name: IsValidName
  nameWithType: IrcChannel.IsValidName
  fullName: smIRCL.ServerEntities.IrcChannel.IsValidName
