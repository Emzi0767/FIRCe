### YamlMime:ManagedReference
items:
- uid: smIRCL.ServerEntities.IrcUser
  commentId: T:smIRCL.ServerEntities.IrcUser
  id: IrcUser
  parent: smIRCL.ServerEntities
  children:
  - smIRCL.ServerEntities.IrcUser.Away
  - smIRCL.ServerEntities.IrcUser.Host
  - smIRCL.ServerEntities.IrcUser.HostMask
  - smIRCL.ServerEntities.IrcUser.LastDirectMessage
  - smIRCL.ServerEntities.IrcUser.MutualChannelModes
  - smIRCL.ServerEntities.IrcUser.MutualChannels
  - smIRCL.ServerEntities.IrcUser.Nick
  - smIRCL.ServerEntities.IrcUser.RealName
  - smIRCL.ServerEntities.IrcUser.UserName
  langs:
  - csharp
  - vb
  name: IrcUser
  nameWithType: IrcUser
  fullName: smIRCL.ServerEntities.IrcUser
  type: Class
  source:
    remote:
      path: smIRCL/ServerEntities/IrcUser.cs
      branch: master
      repo: https://github.com/alexhorner/smIRCL.git
    id: IrcUser
    path: ../smIRCL/ServerEntities/IrcUser.cs
    startLine: 8
  assemblies:
  - smIRCL
  namespace: smIRCL.ServerEntities
  summary: "\nAn IRC user who exists on the connected IRC server\n"
  example: []
  syntax:
    content: public class IrcUser
    content.vb: Public Class IrcUser
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: smIRCL.ServerEntities.IrcUser.Nick
  commentId: P:smIRCL.ServerEntities.IrcUser.Nick
  id: Nick
  parent: smIRCL.ServerEntities.IrcUser
  langs:
  - csharp
  - vb
  name: Nick
  nameWithType: IrcUser.Nick
  fullName: smIRCL.ServerEntities.IrcUser.Nick
  type: Property
  source:
    remote:
      path: smIRCL/ServerEntities/IrcUser.cs
      branch: master
      repo: https://github.com/alexhorner/smIRCL.git
    id: Nick
    path: ../smIRCL/ServerEntities/IrcUser.cs
    startLine: 13
  assemblies:
  - smIRCL
  namespace: smIRCL.ServerEntities
  summary: "\nThe Nick of the IRC user\n"
  example: []
  syntax:
    content: public string Nick { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Nick As String
  overload: smIRCL.ServerEntities.IrcUser.Nick*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: smIRCL.ServerEntities.IrcUser.UserName
  commentId: P:smIRCL.ServerEntities.IrcUser.UserName
  id: UserName
  parent: smIRCL.ServerEntities.IrcUser
  langs:
  - csharp
  - vb
  name: UserName
  nameWithType: IrcUser.UserName
  fullName: smIRCL.ServerEntities.IrcUser.UserName
  type: Property
  source:
    remote:
      path: smIRCL/ServerEntities/IrcUser.cs
      branch: master
      repo: https://github.com/alexhorner/smIRCL.git
    id: UserName
    path: ../smIRCL/ServerEntities/IrcUser.cs
    startLine: 17
  assemblies:
  - smIRCL
  namespace: smIRCL.ServerEntities
  summary: "\nThe User name of the IRC user\n"
  example: []
  syntax:
    content: public string UserName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property UserName As String
  overload: smIRCL.ServerEntities.IrcUser.UserName*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: smIRCL.ServerEntities.IrcUser.RealName
  commentId: P:smIRCL.ServerEntities.IrcUser.RealName
  id: RealName
  parent: smIRCL.ServerEntities.IrcUser
  langs:
  - csharp
  - vb
  name: RealName
  nameWithType: IrcUser.RealName
  fullName: smIRCL.ServerEntities.IrcUser.RealName
  type: Property
  source:
    remote:
      path: smIRCL/ServerEntities/IrcUser.cs
      branch: master
      repo: https://github.com/alexhorner/smIRCL.git
    id: RealName
    path: ../smIRCL/ServerEntities/IrcUser.cs
    startLine: 21
  assemblies:
  - smIRCL
  namespace: smIRCL.ServerEntities
  summary: "\nThe Real name (GECOS) of the IRC user\n"
  example: []
  syntax:
    content: public string RealName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property RealName As String
  overload: smIRCL.ServerEntities.IrcUser.RealName*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: smIRCL.ServerEntities.IrcUser.HostMask
  commentId: P:smIRCL.ServerEntities.IrcUser.HostMask
  id: HostMask
  parent: smIRCL.ServerEntities.IrcUser
  langs:
  - csharp
  - vb
  name: HostMask
  nameWithType: IrcUser.HostMask
  fullName: smIRCL.ServerEntities.IrcUser.HostMask
  type: Property
  source:
    remote:
      path: smIRCL/ServerEntities/IrcUser.cs
      branch: master
      repo: https://github.com/alexhorner/smIRCL.git
    id: HostMask
    path: ../smIRCL/ServerEntities/IrcUser.cs
    startLine: 25
  assemblies:
  - smIRCL
  namespace: smIRCL.ServerEntities
  summary: "\nThe Host mask of the IRC user\n"
  example: []
  syntax:
    content: public string HostMask { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property HostMask As String
  overload: smIRCL.ServerEntities.IrcUser.HostMask*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: smIRCL.ServerEntities.IrcUser.Host
  commentId: P:smIRCL.ServerEntities.IrcUser.Host
  id: Host
  parent: smIRCL.ServerEntities.IrcUser
  langs:
  - csharp
  - vb
  name: Host
  nameWithType: IrcUser.Host
  fullName: smIRCL.ServerEntities.IrcUser.Host
  type: Property
  source:
    remote:
      path: smIRCL/ServerEntities/IrcUser.cs
      branch: master
      repo: https://github.com/alexhorner/smIRCL.git
    id: Host
    path: ../smIRCL/ServerEntities/IrcUser.cs
    startLine: 29
  assemblies:
  - smIRCL
  namespace: smIRCL.ServerEntities
  summary: "\nThe Hostname or Mask of the IRC user\n"
  example: []
  syntax:
    content: public string Host { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Host As String
  overload: smIRCL.ServerEntities.IrcUser.Host*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: smIRCL.ServerEntities.IrcUser.Away
  commentId: P:smIRCL.ServerEntities.IrcUser.Away
  id: Away
  parent: smIRCL.ServerEntities.IrcUser
  langs:
  - csharp
  - vb
  name: Away
  nameWithType: IrcUser.Away
  fullName: smIRCL.ServerEntities.IrcUser.Away
  type: Property
  source:
    remote:
      path: smIRCL/ServerEntities/IrcUser.cs
      branch: master
      repo: https://github.com/alexhorner/smIRCL.git
    id: Away
    path: ../smIRCL/ServerEntities/IrcUser.cs
    startLine: 33
  assemblies:
  - smIRCL
  namespace: smIRCL.ServerEntities
  summary: "\nThe Away status and message of the IRC user\n"
  example: []
  syntax:
    content: public string Away { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Away As String
  overload: smIRCL.ServerEntities.IrcUser.Away*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: smIRCL.ServerEntities.IrcUser.MutualChannels
  commentId: P:smIRCL.ServerEntities.IrcUser.MutualChannels
  id: MutualChannels
  parent: smIRCL.ServerEntities.IrcUser
  langs:
  - csharp
  - vb
  name: MutualChannels
  nameWithType: IrcUser.MutualChannels
  fullName: smIRCL.ServerEntities.IrcUser.MutualChannels
  type: Property
  source:
    remote:
      path: smIRCL/ServerEntities/IrcUser.cs
      branch: master
      repo: https://github.com/alexhorner/smIRCL.git
    id: MutualChannels
    path: ../smIRCL/ServerEntities/IrcUser.cs
    startLine: 37
  assemblies:
  - smIRCL
  namespace: smIRCL.ServerEntities
  summary: "\nThe channels shared between the IRC user and the client\n"
  example: []
  syntax:
    content: public List<string> MutualChannels { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Public Property MutualChannels As List(Of String)
  overload: smIRCL.ServerEntities.IrcUser.MutualChannels*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: smIRCL.ServerEntities.IrcUser.MutualChannelModes
  commentId: P:smIRCL.ServerEntities.IrcUser.MutualChannelModes
  id: MutualChannelModes
  parent: smIRCL.ServerEntities.IrcUser
  langs:
  - csharp
  - vb
  name: MutualChannelModes
  nameWithType: IrcUser.MutualChannelModes
  fullName: smIRCL.ServerEntities.IrcUser.MutualChannelModes
  type: Property
  source:
    remote:
      path: smIRCL/ServerEntities/IrcUser.cs
      branch: master
      repo: https://github.com/alexhorner/smIRCL.git
    id: MutualChannelModes
    path: ../smIRCL/ServerEntities/IrcUser.cs
    startLine: 41
  assemblies:
  - smIRCL
  namespace: smIRCL.ServerEntities
  summary: "\nThe modes the IRC user has in the associated mutual channel\n"
  example: []
  syntax:
    content: public List<KeyValuePair<string, List<char>>> MutualChannelModes { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.Collections.Generic.List{System.Char}}}
    content.vb: Public Property MutualChannelModes As List(Of KeyValuePair(Of String, List(Of Char)))
  overload: smIRCL.ServerEntities.IrcUser.MutualChannelModes*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: smIRCL.ServerEntities.IrcUser.LastDirectMessage
  commentId: P:smIRCL.ServerEntities.IrcUser.LastDirectMessage
  id: LastDirectMessage
  parent: smIRCL.ServerEntities.IrcUser
  langs:
  - csharp
  - vb
  name: LastDirectMessage
  nameWithType: IrcUser.LastDirectMessage
  fullName: smIRCL.ServerEntities.IrcUser.LastDirectMessage
  type: Property
  source:
    remote:
      path: smIRCL/ServerEntities/IrcUser.cs
      branch: master
      repo: https://github.com/alexhorner/smIRCL.git
    id: LastDirectMessage
    path: ../smIRCL/ServerEntities/IrcUser.cs
    startLine: 45
  assemblies:
  - smIRCL
  namespace: smIRCL.ServerEntities
  summary: "\nThe time of the last Direct Message from or to the IRC user\n"
  example: []
  syntax:
    content: public DateTime? LastDirectMessage { get; }
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
    content.vb: Public ReadOnly Property LastDirectMessage As Date?
  overload: smIRCL.ServerEntities.IrcUser.LastDirectMessage*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: smIRCL.ServerEntities
  commentId: N:smIRCL.ServerEntities
  name: smIRCL.ServerEntities
  nameWithType: smIRCL.ServerEntities
  fullName: smIRCL.ServerEntities
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: smIRCL.ServerEntities.IrcUser.Nick*
  commentId: Overload:smIRCL.ServerEntities.IrcUser.Nick
  name: Nick
  nameWithType: IrcUser.Nick
  fullName: smIRCL.ServerEntities.IrcUser.Nick
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: smIRCL.ServerEntities.IrcUser.UserName*
  commentId: Overload:smIRCL.ServerEntities.IrcUser.UserName
  name: UserName
  nameWithType: IrcUser.UserName
  fullName: smIRCL.ServerEntities.IrcUser.UserName
- uid: smIRCL.ServerEntities.IrcUser.RealName*
  commentId: Overload:smIRCL.ServerEntities.IrcUser.RealName
  name: RealName
  nameWithType: IrcUser.RealName
  fullName: smIRCL.ServerEntities.IrcUser.RealName
- uid: smIRCL.ServerEntities.IrcUser.HostMask*
  commentId: Overload:smIRCL.ServerEntities.IrcUser.HostMask
  name: HostMask
  nameWithType: IrcUser.HostMask
  fullName: smIRCL.ServerEntities.IrcUser.HostMask
- uid: smIRCL.ServerEntities.IrcUser.Host*
  commentId: Overload:smIRCL.ServerEntities.IrcUser.Host
  name: Host
  nameWithType: IrcUser.Host
  fullName: smIRCL.ServerEntities.IrcUser.Host
- uid: smIRCL.ServerEntities.IrcUser.Away*
  commentId: Overload:smIRCL.ServerEntities.IrcUser.Away
  name: Away
  nameWithType: IrcUser.Away
  fullName: smIRCL.ServerEntities.IrcUser.Away
- uid: smIRCL.ServerEntities.IrcUser.MutualChannels*
  commentId: Overload:smIRCL.ServerEntities.IrcUser.MutualChannels
  name: MutualChannels
  nameWithType: IrcUser.MutualChannels
  fullName: smIRCL.ServerEntities.IrcUser.MutualChannels
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<String>
  nameWithType: List<String>
  fullName: System.Collections.Generic.List<System.String>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of System.String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: smIRCL.ServerEntities.IrcUser.MutualChannelModes*
  commentId: Overload:smIRCL.ServerEntities.IrcUser.MutualChannelModes
  name: MutualChannelModes
  nameWithType: IrcUser.MutualChannelModes
  fullName: smIRCL.ServerEntities.IrcUser.MutualChannelModes
- uid: System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.Collections.Generic.List{System.Char}}}
  commentId: T:System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.Collections.Generic.List{System.Char}}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<KeyValuePair<String, List<Char>>>
  nameWithType: List<KeyValuePair<String, List<Char>>>
  fullName: System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<System.String, System.Collections.Generic.List<System.Char>>>
  nameWithType.vb: List(Of KeyValuePair(Of String, List(Of Char)))
  fullName.vb: System.Collections.Generic.List(Of System.Collections.Generic.KeyValuePair(Of System.String, System.Collections.Generic.List(Of System.Char)))
  name.vb: List(Of KeyValuePair(Of String, List(Of Char)))
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: smIRCL.ServerEntities.IrcUser.LastDirectMessage*
  commentId: Overload:smIRCL.ServerEntities.IrcUser.LastDirectMessage
  name: LastDirectMessage
  nameWithType: IrcUser.LastDirectMessage
  fullName: smIRCL.ServerEntities.IrcUser.LastDirectMessage
- uid: System.Nullable{System.DateTime}
  commentId: T:System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  nameWithType.vb: Nullable(Of DateTime)
  fullName.vb: System.Nullable(Of System.DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
