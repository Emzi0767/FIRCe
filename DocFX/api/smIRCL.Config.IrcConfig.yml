### YamlMime:ManagedReference
items:
- uid: smIRCL.Config.IrcConfig
  commentId: T:smIRCL.Config.IrcConfig
  id: IrcConfig
  parent: smIRCL.Config
  children:
  - smIRCL.Config.IrcConfig.AlternativeNicks
  - smIRCL.Config.IrcConfig.AuthMode
  - smIRCL.Config.IrcConfig.AuthPassword
  - smIRCL.Config.IrcConfig.AuthUsername
  - smIRCL.Config.IrcConfig.AutoJoinChannels
  - smIRCL.Config.IrcConfig.ConnectOnInstantiation
  - smIRCL.Config.IrcConfig.DesiredCapabilities
  - smIRCL.Config.IrcConfig.DirectMessageHoldingPeriod
  - smIRCL.Config.IrcConfig.IsValid(System.Boolean)
  - smIRCL.Config.IrcConfig.Nick
  - smIRCL.Config.IrcConfig.RealName
  - smIRCL.Config.IrcConfig.ReconnectAttempts
  - smIRCL.Config.IrcConfig.ServerHostname
  - smIRCL.Config.IrcConfig.ServerPassword
  - smIRCL.Config.IrcConfig.ServerPort
  - smIRCL.Config.IrcConfig.UserName
  - smIRCL.Config.IrcConfig.UseSsl
  langs:
  - csharp
  - vb
  name: IrcConfig
  nameWithType: IrcConfig
  fullName: smIRCL.Config.IrcConfig
  type: Class
  source:
    remote:
      path: smIRCL/Config/IrcConfig.cs
      branch: master
      repo: https://github.com/alexhorner/smIRCL.git
    id: IrcConfig
    path: ../smIRCL/Config/IrcConfig.cs
    startLine: 11
  assemblies:
  - smIRCL
  namespace: smIRCL.Config
  summary: "\nGeneralised IRC configuration with defaults\n"
  example: []
  syntax:
    content: public class IrcConfig
    content.vb: Public Class IrcConfig
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: smIRCL.Config.IrcConfig.ServerHostname
  commentId: P:smIRCL.Config.IrcConfig.ServerHostname
  id: ServerHostname
  parent: smIRCL.Config.IrcConfig
  langs:
  - csharp
  - vb
  name: ServerHostname
  nameWithType: IrcConfig.ServerHostname
  fullName: smIRCL.Config.IrcConfig.ServerHostname
  type: Property
  source:
    remote:
      path: smIRCL/Config/IrcConfig.cs
      branch: master
      repo: https://github.com/alexhorner/smIRCL.git
    id: ServerHostname
    path: ../smIRCL/Config/IrcConfig.cs
    startLine: 16
  assemblies:
  - smIRCL
  namespace: smIRCL.Config
  summary: "\nThe hostname or IP address of the server\n"
  example: []
  syntax:
    content: public string ServerHostname { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ServerHostname As String
  overload: smIRCL.Config.IrcConfig.ServerHostname*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: smIRCL.Config.IrcConfig.ServerPort
  commentId: P:smIRCL.Config.IrcConfig.ServerPort
  id: ServerPort
  parent: smIRCL.Config.IrcConfig
  langs:
  - csharp
  - vb
  name: ServerPort
  nameWithType: IrcConfig.ServerPort
  fullName: smIRCL.Config.IrcConfig.ServerPort
  type: Property
  source:
    remote:
      path: smIRCL/Config/IrcConfig.cs
      branch: master
      repo: https://github.com/alexhorner/smIRCL.git
    id: ServerPort
    path: ../smIRCL/Config/IrcConfig.cs
    startLine: 21
  assemblies:
  - smIRCL
  namespace: smIRCL.Config
  summary: "\nThe port of the server\n"
  example: []
  syntax:
    content: public int ServerPort { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property ServerPort As Integer
  overload: smIRCL.Config.IrcConfig.ServerPort*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: smIRCL.Config.IrcConfig.ServerPassword
  commentId: P:smIRCL.Config.IrcConfig.ServerPassword
  id: ServerPassword
  parent: smIRCL.Config.IrcConfig
  langs:
  - csharp
  - vb
  name: ServerPassword
  nameWithType: IrcConfig.ServerPassword
  fullName: smIRCL.Config.IrcConfig.ServerPassword
  type: Property
  source:
    remote:
      path: smIRCL/Config/IrcConfig.cs
      branch: master
      repo: https://github.com/alexhorner/smIRCL.git
    id: ServerPassword
    path: ../smIRCL/Config/IrcConfig.cs
    startLine: 26
  assemblies:
  - smIRCL
  namespace: smIRCL.Config
  summary: "\nThe connection password of the server\n"
  example: []
  syntax:
    content: public string ServerPassword { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ServerPassword As String
  overload: smIRCL.Config.IrcConfig.ServerPassword*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: smIRCL.Config.IrcConfig.Nick
  commentId: P:smIRCL.Config.IrcConfig.Nick
  id: Nick
  parent: smIRCL.Config.IrcConfig
  langs:
  - csharp
  - vb
  name: Nick
  nameWithType: IrcConfig.Nick
  fullName: smIRCL.Config.IrcConfig.Nick
  type: Property
  source:
    remote:
      path: smIRCL/Config/IrcConfig.cs
      branch: master
      repo: https://github.com/alexhorner/smIRCL.git
    id: Nick
    path: ../smIRCL/Config/IrcConfig.cs
    startLine: 31
  assemblies:
  - smIRCL
  namespace: smIRCL.Config
  summary: "\nThe Nick for the client\n"
  example: []
  syntax:
    content: public string Nick { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Nick As String
  overload: smIRCL.Config.IrcConfig.Nick*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: smIRCL.Config.IrcConfig.AlternativeNicks
  commentId: P:smIRCL.Config.IrcConfig.AlternativeNicks
  id: AlternativeNicks
  parent: smIRCL.Config.IrcConfig
  langs:
  - csharp
  - vb
  name: AlternativeNicks
  nameWithType: IrcConfig.AlternativeNicks
  fullName: smIRCL.Config.IrcConfig.AlternativeNicks
  type: Property
  source:
    remote:
      path: smIRCL/Config/IrcConfig.cs
      branch: master
      repo: https://github.com/alexhorner/smIRCL.git
    id: AlternativeNicks
    path: ../smIRCL/Config/IrcConfig.cs
    startLine: 36
  assemblies:
  - smIRCL
  namespace: smIRCL.Config
  summary: "\nA list of alternative Nicks if the preferred one is unavailable\n"
  example: []
  syntax:
    content: public Queue<string> AlternativeNicks { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.Queue{System.String}
    content.vb: Public Property AlternativeNicks As Queue(Of String)
  overload: smIRCL.Config.IrcConfig.AlternativeNicks*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: smIRCL.Config.IrcConfig.AutoJoinChannels
  commentId: P:smIRCL.Config.IrcConfig.AutoJoinChannels
  id: AutoJoinChannels
  parent: smIRCL.Config.IrcConfig
  langs:
  - csharp
  - vb
  name: AutoJoinChannels
  nameWithType: IrcConfig.AutoJoinChannels
  fullName: smIRCL.Config.IrcConfig.AutoJoinChannels
  type: Property
  source:
    remote:
      path: smIRCL/Config/IrcConfig.cs
      branch: master
      repo: https://github.com/alexhorner/smIRCL.git
    id: AutoJoinChannels
    path: ../smIRCL/Config/IrcConfig.cs
    startLine: 41
  assemblies:
  - smIRCL
  namespace: smIRCL.Config
  summary: "\nA list of channels to automatically join upon connection completion\n"
  example: []
  syntax:
    content: public List<string> AutoJoinChannels { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Public Property AutoJoinChannels As List(Of String)
  overload: smIRCL.Config.IrcConfig.AutoJoinChannels*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: smIRCL.Config.IrcConfig.UserName
  commentId: P:smIRCL.Config.IrcConfig.UserName
  id: UserName
  parent: smIRCL.Config.IrcConfig
  langs:
  - csharp
  - vb
  name: UserName
  nameWithType: IrcConfig.UserName
  fullName: smIRCL.Config.IrcConfig.UserName
  type: Property
  source:
    remote:
      path: smIRCL/Config/IrcConfig.cs
      branch: master
      repo: https://github.com/alexhorner/smIRCL.git
    id: UserName
    path: ../smIRCL/Config/IrcConfig.cs
    startLine: 46
  assemblies:
  - smIRCL
  namespace: smIRCL.Config
  summary: "\nThe User name for the client\n"
  example: []
  syntax:
    content: public string UserName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property UserName As String
  overload: smIRCL.Config.IrcConfig.UserName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: smIRCL.Config.IrcConfig.RealName
  commentId: P:smIRCL.Config.IrcConfig.RealName
  id: RealName
  parent: smIRCL.Config.IrcConfig
  langs:
  - csharp
  - vb
  name: RealName
  nameWithType: IrcConfig.RealName
  fullName: smIRCL.Config.IrcConfig.RealName
  type: Property
  source:
    remote:
      path: smIRCL/Config/IrcConfig.cs
      branch: master
      repo: https://github.com/alexhorner/smIRCL.git
    id: RealName
    path: ../smIRCL/Config/IrcConfig.cs
    startLine: 51
  assemblies:
  - smIRCL
  namespace: smIRCL.Config
  summary: "\nThe real name for the client\n"
  example: []
  syntax:
    content: public string RealName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property RealName As String
  overload: smIRCL.Config.IrcConfig.RealName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: smIRCL.Config.IrcConfig.AuthUsername
  commentId: P:smIRCL.Config.IrcConfig.AuthUsername
  id: AuthUsername
  parent: smIRCL.Config.IrcConfig
  langs:
  - csharp
  - vb
  name: AuthUsername
  nameWithType: IrcConfig.AuthUsername
  fullName: smIRCL.Config.IrcConfig.AuthUsername
  type: Property
  source:
    remote:
      path: smIRCL/Config/IrcConfig.cs
      branch: master
      repo: https://github.com/alexhorner/smIRCL.git
    id: AuthUsername
    path: ../smIRCL/Config/IrcConfig.cs
    startLine: 56
  assemblies:
  - smIRCL
  namespace: smIRCL.Config
  summary: "\nThe client&apos;s personal authentication username\n"
  example: []
  syntax:
    content: public string AuthUsername { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property AuthUsername As String
  overload: smIRCL.Config.IrcConfig.AuthUsername*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: smIRCL.Config.IrcConfig.AuthPassword
  commentId: P:smIRCL.Config.IrcConfig.AuthPassword
  id: AuthPassword
  parent: smIRCL.Config.IrcConfig
  langs:
  - csharp
  - vb
  name: AuthPassword
  nameWithType: IrcConfig.AuthPassword
  fullName: smIRCL.Config.IrcConfig.AuthPassword
  type: Property
  source:
    remote:
      path: smIRCL/Config/IrcConfig.cs
      branch: master
      repo: https://github.com/alexhorner/smIRCL.git
    id: AuthPassword
    path: ../smIRCL/Config/IrcConfig.cs
    startLine: 61
  assemblies:
  - smIRCL
  namespace: smIRCL.Config
  summary: "\nThe client&apos;s personal authentication password\n"
  example: []
  syntax:
    content: public string AuthPassword { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property AuthPassword As String
  overload: smIRCL.Config.IrcConfig.AuthPassword*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: smIRCL.Config.IrcConfig.AuthMode
  commentId: P:smIRCL.Config.IrcConfig.AuthMode
  id: AuthMode
  parent: smIRCL.Config.IrcConfig
  langs:
  - csharp
  - vb
  name: AuthMode
  nameWithType: IrcConfig.AuthMode
  fullName: smIRCL.Config.IrcConfig.AuthMode
  type: Property
  source:
    remote:
      path: smIRCL/Config/IrcConfig.cs
      branch: master
      repo: https://github.com/alexhorner/smIRCL.git
    id: AuthMode
    path: ../smIRCL/Config/IrcConfig.cs
    startLine: 66
  assemblies:
  - smIRCL
  namespace: smIRCL.Config
  summary: "\nThe client&apos;s personal authentication method\n"
  example: []
  syntax:
    content: public AuthMode AuthMode { get; set; }
    parameters: []
    return:
      type: smIRCL.Enums.AuthMode
    content.vb: Public Property AuthMode As AuthMode
  overload: smIRCL.Config.IrcConfig.AuthMode*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: smIRCL.Config.IrcConfig.UseSsl
  commentId: P:smIRCL.Config.IrcConfig.UseSsl
  id: UseSsl
  parent: smIRCL.Config.IrcConfig
  langs:
  - csharp
  - vb
  name: UseSsl
  nameWithType: IrcConfig.UseSsl
  fullName: smIRCL.Config.IrcConfig.UseSsl
  type: Property
  source:
    remote:
      path: smIRCL/Config/IrcConfig.cs
      branch: master
      repo: https://github.com/alexhorner/smIRCL.git
    id: UseSsl
    path: ../smIRCL/Config/IrcConfig.cs
    startLine: 71
  assemblies:
  - smIRCL
  namespace: smIRCL.Config
  summary: "\nWhether to use SSL for the connection\n"
  example: []
  syntax:
    content: public bool UseSsl { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property UseSsl As Boolean
  overload: smIRCL.Config.IrcConfig.UseSsl*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: smIRCL.Config.IrcConfig.ReconnectAttempts
  commentId: P:smIRCL.Config.IrcConfig.ReconnectAttempts
  id: ReconnectAttempts
  parent: smIRCL.Config.IrcConfig
  langs:
  - csharp
  - vb
  name: ReconnectAttempts
  nameWithType: IrcConfig.ReconnectAttempts
  fullName: smIRCL.Config.IrcConfig.ReconnectAttempts
  type: Property
  source:
    remote:
      path: smIRCL/Config/IrcConfig.cs
      branch: master
      repo: https://github.com/alexhorner/smIRCL.git
    id: ReconnectAttempts
    path: ../smIRCL/Config/IrcConfig.cs
    startLine: 76
  assemblies:
  - smIRCL
  namespace: smIRCL.Config
  summary: "\nHow many times to attempt a reconnect on failure\n"
  example: []
  syntax:
    content: public int ReconnectAttempts { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property ReconnectAttempts As Integer
  overload: smIRCL.Config.IrcConfig.ReconnectAttempts*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: smIRCL.Config.IrcConfig.ConnectOnInstantiation
  commentId: P:smIRCL.Config.IrcConfig.ConnectOnInstantiation
  id: ConnectOnInstantiation
  parent: smIRCL.Config.IrcConfig
  langs:
  - csharp
  - vb
  name: ConnectOnInstantiation
  nameWithType: IrcConfig.ConnectOnInstantiation
  fullName: smIRCL.Config.IrcConfig.ConnectOnInstantiation
  type: Property
  source:
    remote:
      path: smIRCL/Config/IrcConfig.cs
      branch: master
      repo: https://github.com/alexhorner/smIRCL.git
    id: ConnectOnInstantiation
    path: ../smIRCL/Config/IrcConfig.cs
    startLine: 81
  assemblies:
  - smIRCL
  namespace: smIRCL.Config
  summary: "\nWhether to connect immediately during IrcClient instantiation\n"
  example: []
  syntax:
    content: public bool ConnectOnInstantiation { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property ConnectOnInstantiation As Boolean
  overload: smIRCL.Config.IrcConfig.ConnectOnInstantiation*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: smIRCL.Config.IrcConfig.DirectMessageHoldingPeriod
  commentId: P:smIRCL.Config.IrcConfig.DirectMessageHoldingPeriod
  id: DirectMessageHoldingPeriod
  parent: smIRCL.Config.IrcConfig
  langs:
  - csharp
  - vb
  name: DirectMessageHoldingPeriod
  nameWithType: IrcConfig.DirectMessageHoldingPeriod
  fullName: smIRCL.Config.IrcConfig.DirectMessageHoldingPeriod
  type: Property
  source:
    remote:
      path: smIRCL/Config/IrcConfig.cs
      branch: master
      repo: https://github.com/alexhorner/smIRCL.git
    id: DirectMessageHoldingPeriod
    path: ../smIRCL/Config/IrcConfig.cs
    startLine: 86
  assemblies:
  - smIRCL
  namespace: smIRCL.Config
  summary: "\nThe time an IrcUser will be safe from garbage collection after a Direct Message, with no mutual channels\n"
  example: []
  syntax:
    content: public TimeSpan DirectMessageHoldingPeriod { get; set; }
    parameters: []
    return:
      type: System.TimeSpan
    content.vb: Public Property DirectMessageHoldingPeriod As TimeSpan
  overload: smIRCL.Config.IrcConfig.DirectMessageHoldingPeriod*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: smIRCL.Config.IrcConfig.DesiredCapabilities
  commentId: F:smIRCL.Config.IrcConfig.DesiredCapabilities
  id: DesiredCapabilities
  parent: smIRCL.Config.IrcConfig
  langs:
  - csharp
  - vb
  name: DesiredCapabilities
  nameWithType: IrcConfig.DesiredCapabilities
  fullName: smIRCL.Config.IrcConfig.DesiredCapabilities
  type: Field
  source:
    remote:
      path: smIRCL/Config/IrcConfig.cs
      branch: master
      repo: https://github.com/alexhorner/smIRCL.git
    id: DesiredCapabilities
    path: ../smIRCL/Config/IrcConfig.cs
    startLine: 91
  assemblies:
  - smIRCL
  namespace: smIRCL.Config
  summary: "\nThe IRCv3 capabilities to negotiate. Default capabilities are included and should be added to, not replaced otherwise some features may be broken. SASL must not be included as it is determined by AuthMode\n"
  example: []
  syntax:
    content: public List<string> DesiredCapabilities
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Public DesiredCapabilities As List(Of String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: smIRCL.Config.IrcConfig.IsValid(System.Boolean)
  commentId: M:smIRCL.Config.IrcConfig.IsValid(System.Boolean)
  id: IsValid(System.Boolean)
  parent: smIRCL.Config.IrcConfig
  langs:
  - csharp
  - vb
  name: IsValid(Boolean)
  nameWithType: IrcConfig.IsValid(Boolean)
  fullName: smIRCL.Config.IrcConfig.IsValid(System.Boolean)
  type: Method
  source:
    remote:
      path: smIRCL/Config/IrcConfig.cs
      branch: master
      repo: https://github.com/alexhorner/smIRCL.git
    id: IsValid
    path: ../smIRCL/Config/IrcConfig.cs
    startLine: 105
  assemblies:
  - smIRCL
  namespace: smIRCL.Config
  summary: "\nChecks this configuration is valid\n"
  example: []
  syntax:
    content: public bool IsValid(bool throwOnValidationError = false)
    parameters:
    - id: throwOnValidationError
      type: System.Boolean
      description: Whether to throw an exception on a validation error rather than return false
    return:
      type: System.Boolean
      description: <code>bool</code> Is the configuration valid
    content.vb: Public Function IsValid(throwOnValidationError As Boolean = False) As Boolean
  overload: smIRCL.Config.IrcConfig.IsValid*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: smIRCL.Config
  commentId: N:smIRCL.Config
  name: smIRCL.Config
  nameWithType: smIRCL.Config
  fullName: smIRCL.Config
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: smIRCL.Config.IrcConfig.ServerHostname*
  commentId: Overload:smIRCL.Config.IrcConfig.ServerHostname
  name: ServerHostname
  nameWithType: IrcConfig.ServerHostname
  fullName: smIRCL.Config.IrcConfig.ServerHostname
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: smIRCL.Config.IrcConfig.ServerPort*
  commentId: Overload:smIRCL.Config.IrcConfig.ServerPort
  name: ServerPort
  nameWithType: IrcConfig.ServerPort
  fullName: smIRCL.Config.IrcConfig.ServerPort
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: smIRCL.Config.IrcConfig.ServerPassword*
  commentId: Overload:smIRCL.Config.IrcConfig.ServerPassword
  name: ServerPassword
  nameWithType: IrcConfig.ServerPassword
  fullName: smIRCL.Config.IrcConfig.ServerPassword
- uid: smIRCL.Config.IrcConfig.Nick*
  commentId: Overload:smIRCL.Config.IrcConfig.Nick
  name: Nick
  nameWithType: IrcConfig.Nick
  fullName: smIRCL.Config.IrcConfig.Nick
- uid: smIRCL.Config.IrcConfig.AlternativeNicks*
  commentId: Overload:smIRCL.Config.IrcConfig.AlternativeNicks
  name: AlternativeNicks
  nameWithType: IrcConfig.AlternativeNicks
  fullName: smIRCL.Config.IrcConfig.AlternativeNicks
- uid: System.Collections.Generic.Queue{System.String}
  commentId: T:System.Collections.Generic.Queue{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Queue`1
  name: Queue<String>
  nameWithType: Queue<String>
  fullName: System.Collections.Generic.Queue<System.String>
  nameWithType.vb: Queue(Of String)
  fullName.vb: System.Collections.Generic.Queue(Of System.String)
  name.vb: Queue(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.Queue`1
    name: Queue
    nameWithType: Queue
    fullName: System.Collections.Generic.Queue
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Queue`1
    name: Queue
    nameWithType: Queue
    fullName: System.Collections.Generic.Queue
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Queue`1
  commentId: T:System.Collections.Generic.Queue`1
  isExternal: true
  name: Queue<T>
  nameWithType: Queue<T>
  fullName: System.Collections.Generic.Queue<T>
  nameWithType.vb: Queue(Of T)
  fullName.vb: System.Collections.Generic.Queue(Of T)
  name.vb: Queue(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.Queue`1
    name: Queue
    nameWithType: Queue
    fullName: System.Collections.Generic.Queue
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Queue`1
    name: Queue
    nameWithType: Queue
    fullName: System.Collections.Generic.Queue
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: smIRCL.Config.IrcConfig.AutoJoinChannels*
  commentId: Overload:smIRCL.Config.IrcConfig.AutoJoinChannels
  name: AutoJoinChannels
  nameWithType: IrcConfig.AutoJoinChannels
  fullName: smIRCL.Config.IrcConfig.AutoJoinChannels
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<String>
  nameWithType: List<String>
  fullName: System.Collections.Generic.List<System.String>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of System.String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: smIRCL.Config.IrcConfig.UserName*
  commentId: Overload:smIRCL.Config.IrcConfig.UserName
  name: UserName
  nameWithType: IrcConfig.UserName
  fullName: smIRCL.Config.IrcConfig.UserName
- uid: smIRCL.Config.IrcConfig.RealName*
  commentId: Overload:smIRCL.Config.IrcConfig.RealName
  name: RealName
  nameWithType: IrcConfig.RealName
  fullName: smIRCL.Config.IrcConfig.RealName
- uid: smIRCL.Config.IrcConfig.AuthUsername*
  commentId: Overload:smIRCL.Config.IrcConfig.AuthUsername
  name: AuthUsername
  nameWithType: IrcConfig.AuthUsername
  fullName: smIRCL.Config.IrcConfig.AuthUsername
- uid: smIRCL.Config.IrcConfig.AuthPassword*
  commentId: Overload:smIRCL.Config.IrcConfig.AuthPassword
  name: AuthPassword
  nameWithType: IrcConfig.AuthPassword
  fullName: smIRCL.Config.IrcConfig.AuthPassword
- uid: smIRCL.Config.IrcConfig.AuthMode*
  commentId: Overload:smIRCL.Config.IrcConfig.AuthMode
  name: AuthMode
  nameWithType: IrcConfig.AuthMode
  fullName: smIRCL.Config.IrcConfig.AuthMode
- uid: smIRCL.Enums.AuthMode
  commentId: T:smIRCL.Enums.AuthMode
  parent: smIRCL.Enums
  name: AuthMode
  nameWithType: AuthMode
  fullName: smIRCL.Enums.AuthMode
- uid: smIRCL.Enums
  commentId: N:smIRCL.Enums
  name: smIRCL.Enums
  nameWithType: smIRCL.Enums
  fullName: smIRCL.Enums
- uid: smIRCL.Config.IrcConfig.UseSsl*
  commentId: Overload:smIRCL.Config.IrcConfig.UseSsl
  name: UseSsl
  nameWithType: IrcConfig.UseSsl
  fullName: smIRCL.Config.IrcConfig.UseSsl
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: smIRCL.Config.IrcConfig.ReconnectAttempts*
  commentId: Overload:smIRCL.Config.IrcConfig.ReconnectAttempts
  name: ReconnectAttempts
  nameWithType: IrcConfig.ReconnectAttempts
  fullName: smIRCL.Config.IrcConfig.ReconnectAttempts
- uid: smIRCL.Config.IrcConfig.ConnectOnInstantiation*
  commentId: Overload:smIRCL.Config.IrcConfig.ConnectOnInstantiation
  name: ConnectOnInstantiation
  nameWithType: IrcConfig.ConnectOnInstantiation
  fullName: smIRCL.Config.IrcConfig.ConnectOnInstantiation
- uid: smIRCL.Config.IrcConfig.DirectMessageHoldingPeriod*
  commentId: Overload:smIRCL.Config.IrcConfig.DirectMessageHoldingPeriod
  name: DirectMessageHoldingPeriod
  nameWithType: IrcConfig.DirectMessageHoldingPeriod
  fullName: smIRCL.Config.IrcConfig.DirectMessageHoldingPeriod
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: smIRCL.Config.IrcConfig.IsValid*
  commentId: Overload:smIRCL.Config.IrcConfig.IsValid
  name: IsValid
  nameWithType: IrcConfig.IsValid
  fullName: smIRCL.Config.IrcConfig.IsValid
