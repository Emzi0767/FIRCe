### YamlMime:ManagedReference
items:
- uid: smIRCL.Extensions.StringExtensions
  commentId: T:smIRCL.Extensions.StringExtensions
  id: StringExtensions
  parent: smIRCL.Extensions
  children:
  - smIRCL.Extensions.StringExtensions.ToIrcLower(System.String)
  - smIRCL.Extensions.StringExtensions.ToIrcUpper(System.String)
  langs:
  - csharp
  - vb
  name: StringExtensions
  nameWithType: StringExtensions
  fullName: smIRCL.Extensions.StringExtensions
  type: Class
  source:
    remote:
      path: smIRCL/Extensions/StringExtensions.cs
      branch: master
      repo: https://github.com/alexhorner/smIRCL.git
    id: StringExtensions
    path: ../smIRCL/Extensions/StringExtensions.cs
    startLine: 5
  assemblies:
  - smIRCL
  namespace: smIRCL.Extensions
  syntax:
    content: public static class StringExtensions
    content.vb: Public Module StringExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: smIRCL.Extensions.StringExtensions.ToIrcLower(System.String)
  commentId: M:smIRCL.Extensions.StringExtensions.ToIrcLower(System.String)
  id: ToIrcLower(System.String)
  isExtensionMethod: true
  parent: smIRCL.Extensions.StringExtensions
  langs:
  - csharp
  - vb
  name: ToIrcLower(String)
  nameWithType: StringExtensions.ToIrcLower(String)
  fullName: smIRCL.Extensions.StringExtensions.ToIrcLower(System.String)
  type: Method
  source:
    remote:
      path: smIRCL/Extensions/StringExtensions.cs
      branch: master
      repo: https://github.com/alexhorner/smIRCL.git
    id: ToIrcLower
    path: ../smIRCL/Extensions/StringExtensions.cs
    startLine: 12
  assemblies:
  - smIRCL
  namespace: smIRCL.Extensions
  summary: "\nConverts strings to IRC lowercase as described in RFC1459\n"
  example: []
  syntax:
    content: public static string ToIrcLower(this string str)
    parameters:
    - id: str
      type: System.String
      description: The string to convert to IRC lowercase
    return:
      type: System.String
      description: The IRC lowercased string
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ToIrcLower(str As String) As String
  overload: smIRCL.Extensions.StringExtensions.ToIrcLower*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: smIRCL.Extensions.StringExtensions.ToIrcUpper(System.String)
  commentId: M:smIRCL.Extensions.StringExtensions.ToIrcUpper(System.String)
  id: ToIrcUpper(System.String)
  isExtensionMethod: true
  parent: smIRCL.Extensions.StringExtensions
  langs:
  - csharp
  - vb
  name: ToIrcUpper(String)
  nameWithType: StringExtensions.ToIrcUpper(String)
  fullName: smIRCL.Extensions.StringExtensions.ToIrcUpper(System.String)
  type: Method
  source:
    remote:
      path: smIRCL/Extensions/StringExtensions.cs
      branch: master
      repo: https://github.com/alexhorner/smIRCL.git
    id: ToIrcUpper
    path: ../smIRCL/Extensions/StringExtensions.cs
    startLine: 29
  assemblies:
  - smIRCL
  namespace: smIRCL.Extensions
  summary: "\nConverts strings to IRC uppercase as described in RFC1459\n"
  example: []
  syntax:
    content: public static string ToIrcUpper(this string str)
    parameters:
    - id: str
      type: System.String
      description: The string to convert to IRC uppercase
    return:
      type: System.String
      description: The IRC uppercased string
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ToIrcUpper(str As String) As String
  overload: smIRCL.Extensions.StringExtensions.ToIrcUpper*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: smIRCL.Extensions
  commentId: N:smIRCL.Extensions
  name: smIRCL.Extensions
  nameWithType: smIRCL.Extensions
  fullName: smIRCL.Extensions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: smIRCL.Extensions.StringExtensions.ToIrcLower*
  commentId: Overload:smIRCL.Extensions.StringExtensions.ToIrcLower
  name: ToIrcLower
  nameWithType: StringExtensions.ToIrcLower
  fullName: smIRCL.Extensions.StringExtensions.ToIrcLower
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: smIRCL.Extensions.StringExtensions.ToIrcUpper*
  commentId: Overload:smIRCL.Extensions.StringExtensions.ToIrcUpper
  name: ToIrcUpper
  nameWithType: StringExtensions.ToIrcUpper
  fullName: smIRCL.Extensions.StringExtensions.ToIrcUpper
